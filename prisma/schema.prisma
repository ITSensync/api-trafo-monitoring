// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum StatusTrafo {
  AKTIF
  TIDAK_AKTIF
}

model Location {
  id        String   @id @default(uuid())
  kode      String?
  lat       Float
  lang      Float
  nama      String
  alamat    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  trafos    Trafo[]

  @@map("Location")
}

model Trafo {
  id          String       @id
  status      StatusTrafo  @default(AKTIF)
  type        String?
  kapasitas   Decimal?
  lat         Float?
  lng         Float?
  location    Location?    @relation(fields: [locationId], references: [id])
  locationId  String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  Monitorings Monitoring[]

  @@map("Trafo")
}

model Monitoring {
  id         Int      @id @default(autoincrement())
  suhu_cpu   Decimal  @db.Decimal(10, 1)
  suhu_trafo Decimal  @db.Decimal(10, 1)
  volt       Decimal  @db.Decimal(10, 1)
  arus1      Decimal  @db.Decimal(10, 1)
  arus2      Decimal  @db.Decimal(10, 1)
  arus3      Decimal  @db.Decimal(10, 1)
  createdAt  DateTime @default(dbgenerated()) @db.Timestamp(3)
  Trafo      Trafo?   @relation(fields: [trafoId], references: [id])
  trafoId    String?

  @@map("Monitoring")
}
